import { api } from "encore.dev/api";
import { referralDB } from "./db";
import { APIError } from "encore.dev/api";

export interface ShareEmailRequest {
  referralId: number;
  recipientEmail: string;
  senderName: string;
  message?: string;
}

export interface ShareEmailResponse {
  success: boolean;
  message: string;
}

// Shares a referral via email for student support meetings.
export const shareEmail = api<ShareEmailRequest, ShareEmailResponse>(
  { expose: true, method: "POST", path: "/referrals/:referralId/share" },
  async (req) => {
    const referral = await referralDB.queryRow<{
      id: number;
      student_first_name: string;
      student_last_initial: string;
      grade: string;
      teacher: string;
      teacher_position: string;
      incident_date: string;
      location: string;
      concern_types: string;
      other_concern_type: string | null;
      concern_description: string;
      severity_level: string;
      actions_taken: string;
      other_action_taken: string | null;
      ai_recommendations: string | null;
      created_at: Date;
    }>`
      SELECT * FROM referrals WHERE id = ${req.referralId}
    `;

    if (!referral) {
      throw APIError.notFound("Referral not found");
    }

    const concernTypes = JSON.parse(referral.concern_types);
    const actionsTaken = JSON.parse(referral.actions_taken);

    // Create email content
    const emailSubject = `Student Support Referral: ${referral.student_first_name} ${referral.student_last_initial}. (Grade ${referral.grade})`;
    
    const emailBody = `
Dear Colleague,

${req.senderName} has shared a student support referral with you for an upcoming meeting.

${req.message ? `Message from ${req.senderName}: ${req.message}\n\n` : ''}

STUDENT SUPPORT REFERRAL SUMMARY
================================

Student Information:
- Name: ${referral.student_first_name} ${referral.student_last_initial}.
- Grade: ${referral.grade}
- Teacher: ${referral.teacher} (${referral.teacher_position})
- Referral ID: #${referral.id}

Incident Details:
- Date: ${new Date(referral.incident_date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
})}
- Location: ${referral.location}
- Severity Level: ${referral.severity_level.charAt(0).toUpperCase() + referral.severity_level.slice(1)}

Concern Types:
${concernTypes.map((type: string) => `- ${type}`).join('\n')}${referral.other_concern_type ? `\n- ${referral.other_concern_type}` : ''}

Concern Description:
${referral.concern_description}

${actionsTaken.length > 0 || referral.other_action_taken ? `
Actions Already Taken:
${actionsTaken.map((action: string) => `- ${action}`).join('\n')}${referral.other_action_taken ? `\n- ${referral.other_action_taken}` : ''}
` : ''}

${referral.ai_recommendations ? `
AI-Generated Tier 2 Intervention Recommendations:
${referral.ai_recommendations}

⚠️ IMPORTANT DISCLAIMER: These AI-generated recommendations are for informational purposes only and should not replace professional educational assessment. Please refer this student to your school's student support department for proper evaluation and vetting. All AI-generated suggestions must be reviewed and approved by qualified educational professionals before implementation.
` : ''}

Submitted: ${referral.created_at.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
  hour: '2-digit',
  minute: '2-digit'
})}

Generated by Concern2Care from Remynd
`;

    // In a real implementation, you would integrate with an email service like SendGrid, AWS SES, etc.
    // For now, we'll simulate the email sending
    try {
      // Simulate email sending delay
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // Log the email for development purposes
      console.log(`Email would be sent to: ${req.recipientEmail}`);
      console.log(`Subject: ${emailSubject}`);
      console.log(`Body: ${emailBody}`);
      
      return {
        success: true,
        message: `Referral shared successfully with ${req.recipientEmail}`
      };
    } catch (error) {
      console.error('Error sending email:', error);
      return {
        success: false,
        message: 'Failed to send email. Please try again later.'
      };
    }
  }
);
